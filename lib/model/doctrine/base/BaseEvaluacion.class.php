<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Evaluacion', 'doctrine');

/**
 * BaseEvaluacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $codigo
 * @property integer $codigo_profesor
 * @property integer $codigo_tema_materia
 * @property string $nombre
 * @property time $hora_inicio
 * @property time $hora_fin
 * @property integer $numero_personas_grupo
 * @property boolean $publico
 * @property date $fecha
 * @property integer $numero_intentos
 * @property boolean $mostrar_solucion
 * @property boolean $barajar_preguntas
 * @property Profesor $Profesor
 * @property TemaOMateria $TemaOMateria
 * @property Doctrine_Collection $EstudianteEvaluacionGrupo
 * @property Doctrine_Collection $EvaluacionPregunta
 * 
 * @method integer             getCodigo()                    Returns the current record's "codigo" value
 * @method integer             getCodigoProfesor()            Returns the current record's "codigo_profesor" value
 * @method integer             getCodigoTemaMateria()         Returns the current record's "codigo_tema_materia" value
 * @method string              getNombre()                    Returns the current record's "nombre" value
 * @method time                getHoraInicio()                Returns the current record's "hora_inicio" value
 * @method time                getHoraFin()                   Returns the current record's "hora_fin" value
 * @method integer             getNumeroPersonasGrupo()       Returns the current record's "numero_personas_grupo" value
 * @method boolean             getPublico()                   Returns the current record's "publico" value
 * @method date                getFecha()                     Returns the current record's "fecha" value
 * @method integer             getNumeroIntentos()            Returns the current record's "numero_intentos" value
 * @method boolean             getMostrarSolucion()           Returns the current record's "mostrar_solucion" value
 * @method boolean             getBarajarPreguntas()          Returns the current record's "barajar_preguntas" value
 * @method Profesor            getProfesor()                  Returns the current record's "Profesor" value
 * @method TemaOMateria        getTemaOMateria()              Returns the current record's "TemaOMateria" value
 * @method Doctrine_Collection getEstudianteEvaluacionGrupo() Returns the current record's "EstudianteEvaluacionGrupo" collection
 * @method Doctrine_Collection getEvaluacionPregunta()        Returns the current record's "EvaluacionPregunta" collection
 * @method Evaluacion          setCodigo()                    Sets the current record's "codigo" value
 * @method Evaluacion          setCodigoProfesor()            Sets the current record's "codigo_profesor" value
 * @method Evaluacion          setCodigoTemaMateria()         Sets the current record's "codigo_tema_materia" value
 * @method Evaluacion          setNombre()                    Sets the current record's "nombre" value
 * @method Evaluacion          setHoraInicio()                Sets the current record's "hora_inicio" value
 * @method Evaluacion          setHoraFin()                   Sets the current record's "hora_fin" value
 * @method Evaluacion          setNumeroPersonasGrupo()       Sets the current record's "numero_personas_grupo" value
 * @method Evaluacion          setPublico()                   Sets the current record's "publico" value
 * @method Evaluacion          setFecha()                     Sets the current record's "fecha" value
 * @method Evaluacion          setNumeroIntentos()            Sets the current record's "numero_intentos" value
 * @method Evaluacion          setMostrarSolucion()           Sets the current record's "mostrar_solucion" value
 * @method Evaluacion          setBarajarPreguntas()          Sets the current record's "barajar_preguntas" value
 * @method Evaluacion          setProfesor()                  Sets the current record's "Profesor" value
 * @method Evaluacion          setTemaOMateria()              Sets the current record's "TemaOMateria" value
 * @method Evaluacion          setEstudianteEvaluacionGrupo() Sets the current record's "EstudianteEvaluacionGrupo" collection
 * @method Evaluacion          setEvaluacionPregunta()        Sets the current record's "EvaluacionPregunta" collection
 * 
 * @package    OE
 * @subpackage model
 * @author     gaea
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvaluacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('evaluacion');
        $this->hasColumn('codigo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'evaluacion_codigo',
             'length' => 4,
             ));
        $this->hasColumn('codigo_profesor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('codigo_tema_materia', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('hora_inicio', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('hora_fin', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('numero_personas_grupo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('publico', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('numero_intentos', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('mostrar_solucion', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('barajar_preguntas', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profesor', array(
             'local' => 'codigo_profesor',
             'foreign' => 'codigo'));

        $this->hasOne('TemaOMateria', array(
             'local' => 'codigo_tema_materia',
             'foreign' => 'codigo'));

        $this->hasMany('EstudianteEvaluacionGrupo', array(
             'local' => 'codigo',
             'foreign' => 'eva_codigo'));

        $this->hasMany('EvaluacionPregunta', array(
             'local' => 'codigo',
             'foreign' => 'codigo_evaluacion'));
    }
}