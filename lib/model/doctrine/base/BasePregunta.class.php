<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Pregunta', 'doctrine');

/**
 * BasePregunta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $codigo
 * @property integer $codigo_profesor
 * @property integer $codigo_tema_o_materia
 * @property integer $codigo_tipo_pregunta
 * @property string $cuerpo
 * @property string $solucion
 * @property boolean $publico
 * @property TemaOMateria $TemaOMateria
 * @property Profesor $Profesor
 * @property TipoPregunta $TipoPregunta
 * @property Doctrine_Collection $EvaluacionPregunta
 * @property Doctrine_Collection $PreguntaHerramienta
 * 
 * @method integer             getCodigo()                Returns the current record's "codigo" value
 * @method integer             getCodigoProfesor()        Returns the current record's "codigo_profesor" value
 * @method integer             getCodigoTemaOMateria()    Returns the current record's "codigo_tema_o_materia" value
 * @method integer             getCodigoTipoPregunta()    Returns the current record's "codigo_tipo_pregunta" value
 * @method string              getCuerpo()                Returns the current record's "cuerpo" value
 * @method string              getSolucion()              Returns the current record's "solucion" value
 * @method boolean             getPublico()               Returns the current record's "publico" value
 * @method TemaOMateria        getTemaOMateria()          Returns the current record's "TemaOMateria" value
 * @method Profesor            getProfesor()              Returns the current record's "Profesor" value
 * @method TipoPregunta        getTipoPregunta()          Returns the current record's "TipoPregunta" value
 * @method Doctrine_Collection getEvaluacionPregunta()    Returns the current record's "EvaluacionPregunta" collection
 * @method Doctrine_Collection getPreguntaHerramienta()   Returns the current record's "PreguntaHerramienta" collection
 * @method Pregunta            setCodigo()                Sets the current record's "codigo" value
 * @method Pregunta            setCodigoProfesor()        Sets the current record's "codigo_profesor" value
 * @method Pregunta            setCodigoTemaOMateria()    Sets the current record's "codigo_tema_o_materia" value
 * @method Pregunta            setCodigoTipoPregunta()    Sets the current record's "codigo_tipo_pregunta" value
 * @method Pregunta            setCuerpo()                Sets the current record's "cuerpo" value
 * @method Pregunta            setSolucion()              Sets the current record's "solucion" value
 * @method Pregunta            setPublico()               Sets the current record's "publico" value
 * @method Pregunta            setTemaOMateria()          Sets the current record's "TemaOMateria" value
 * @method Pregunta            setProfesor()              Sets the current record's "Profesor" value
 * @method Pregunta            setTipoPregunta()          Sets the current record's "TipoPregunta" value
 * @method Pregunta            setEvaluacionPregunta()    Sets the current record's "EvaluacionPregunta" collection
 * @method Pregunta            setPreguntaHerramienta()   Sets the current record's "PreguntaHerramienta" collection
 * 
 * @package    OE
 * @subpackage model
 * @author     gaea
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePregunta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pregunta');
        $this->hasColumn('codigo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'pregunta_codigo',
             'length' => 4,
             ));
        $this->hasColumn('codigo_profesor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('codigo_tema_o_materia', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('codigo_tipo_pregunta', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('cuerpo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('solucion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('publico', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TemaOMateria', array(
             'local' => 'codigo_tema_o_materia',
             'foreign' => 'codigo'));

        $this->hasOne('Profesor', array(
             'local' => 'codigo_profesor',
             'foreign' => 'codigo'));

        $this->hasOne('TipoPregunta', array(
             'local' => 'codigo_tipo_pregunta',
             'foreign' => 'codigo'));

        $this->hasMany('EvaluacionPregunta', array(
             'local' => 'codigo',
             'foreign' => 'codigo_pregunta'));

        $this->hasMany('PreguntaHerramienta', array(
             'local' => 'codigo',
             'foreign' => 'codigo_pregunta'));
    }
}