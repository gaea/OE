<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Pregunta', 'doctrine');

/**
 * BasePregunta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $pre_codigo
 * @property integer $pre_codigo_profesor
 * @property integer $pre_codigo_tema_o_materia
 * @property integer $pre_codigo_tipo_pregunta
 * @property string $pre_cuerpo
 * @property string $pre_solucion
 * @property boolean $pre_publico
 * @property TemaOMateria $TemaOMateria
 * @property Profesor $Profesor
 * @property TipoPregunta $TipoPregunta
 * @property Doctrine_Collection $EvaluacionPregunta
 * @property Doctrine_Collection $PreguntaHerramienta
 * 
 * @method integer             getPreCodigo()                 Returns the current record's "pre_codigo" value
 * @method integer             getPreCodigoProfesor()         Returns the current record's "pre_codigo_profesor" value
 * @method integer             getPreCodigoTemaOMateria()     Returns the current record's "pre_codigo_tema_o_materia" value
 * @method integer             getPreCodigoTipoPregunta()     Returns the current record's "pre_codigo_tipo_pregunta" value
 * @method string              getPreCuerpo()                 Returns the current record's "pre_cuerpo" value
 * @method string              getPreSolucion()               Returns the current record's "pre_solucion" value
 * @method boolean             getPrePublico()                Returns the current record's "pre_publico" value
 * @method TemaOMateria        getTemaOMateria()              Returns the current record's "TemaOMateria" value
 * @method Profesor            getProfesor()                  Returns the current record's "Profesor" value
 * @method TipoPregunta        getTipoPregunta()              Returns the current record's "TipoPregunta" value
 * @method Doctrine_Collection getEvaluacionPregunta()        Returns the current record's "EvaluacionPregunta" collection
 * @method Doctrine_Collection getPreguntaHerramienta()       Returns the current record's "PreguntaHerramienta" collection
 * @method Pregunta            setPreCodigo()                 Sets the current record's "pre_codigo" value
 * @method Pregunta            setPreCodigoProfesor()         Sets the current record's "pre_codigo_profesor" value
 * @method Pregunta            setPreCodigoTemaOMateria()     Sets the current record's "pre_codigo_tema_o_materia" value
 * @method Pregunta            setPreCodigoTipoPregunta()     Sets the current record's "pre_codigo_tipo_pregunta" value
 * @method Pregunta            setPreCuerpo()                 Sets the current record's "pre_cuerpo" value
 * @method Pregunta            setPreSolucion()               Sets the current record's "pre_solucion" value
 * @method Pregunta            setPrePublico()                Sets the current record's "pre_publico" value
 * @method Pregunta            setTemaOMateria()              Sets the current record's "TemaOMateria" value
 * @method Pregunta            setProfesor()                  Sets the current record's "Profesor" value
 * @method Pregunta            setTipoPregunta()              Sets the current record's "TipoPregunta" value
 * @method Pregunta            setEvaluacionPregunta()        Sets the current record's "EvaluacionPregunta" collection
 * @method Pregunta            setPreguntaHerramienta()       Sets the current record's "PreguntaHerramienta" collection
 * 
 * @package    OE
 * @subpackage model
 * @author     gaea
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePregunta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pregunta');
        $this->hasColumn('pre_codigo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'pregunta_pre_codigo',
             'length' => 4,
             ));
        $this->hasColumn('pre_codigo_profesor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('pre_codigo_tema_o_materia', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('pre_codigo_tipo_pregunta', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('pre_cuerpo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pre_solucion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pre_publico', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TemaOMateria', array(
             'local' => 'pre_codigo_tema_o_materia',
             'foreign' => 'tom_codigo'));

        $this->hasOne('Profesor', array(
             'local' => 'pre_codigo_profesor',
             'foreign' => 'pro_codigo'));

        $this->hasOne('TipoPregunta', array(
             'local' => 'pre_codigo_tipo_pregunta',
             'foreign' => 'tip_pre_codigo'));

        $this->hasMany('EvaluacionPregunta', array(
             'local' => 'pre_codigo',
             'foreign' => 'eva_pre_codigo_pregunta'));

        $this->hasMany('PreguntaHerramienta', array(
             'local' => 'pre_codigo',
             'foreign' => 'pre_her_codigo_pregunta'));
    }
}