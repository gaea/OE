<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Profesor', 'doctrine');

/**
 * BaseProfesor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $codigo
 * @property integer $codigo_usuario
 * @property integer $codigo_identificacion
 * @property string $nombres
 * @property string $apellidos
 * @property string $telefono
 * @property string $e_mail
 * @property boolean $habilitado
 * @property string $url_imagen
 * @property Usuario $Usuario
 * @property Identificacion $Identificacion
 * @property Doctrine_Collection $Curso
 * @property Doctrine_Collection $Evaluacion
 * @property Doctrine_Collection $Pregunta
 * 
 * @method integer             getCodigo()                Returns the current record's "codigo" value
 * @method integer             getCodigoUsuario()         Returns the current record's "codigo_usuario" value
 * @method integer             getCodigoIdentificacion()  Returns the current record's "codigo_identificacion" value
 * @method string              getNombres()               Returns the current record's "nombres" value
 * @method string              getApellidos()             Returns the current record's "apellidos" value
 * @method string              getTelefono()              Returns the current record's "telefono" value
 * @method string              getEMail()                 Returns the current record's "e_mail" value
 * @method boolean             getHabilitado()            Returns the current record's "habilitado" value
 * @method string              getUrlImagen()             Returns the current record's "url_imagen" value
 * @method Usuario             getUsuario()               Returns the current record's "Usuario" value
 * @method Identificacion      getIdentificacion()        Returns the current record's "Identificacion" value
 * @method Doctrine_Collection getCurso()                 Returns the current record's "Curso" collection
 * @method Doctrine_Collection getEvaluacion()            Returns the current record's "Evaluacion" collection
 * @method Doctrine_Collection getPregunta()              Returns the current record's "Pregunta" collection
 * @method Profesor            setCodigo()                Sets the current record's "codigo" value
 * @method Profesor            setCodigoUsuario()         Sets the current record's "codigo_usuario" value
 * @method Profesor            setCodigoIdentificacion()  Sets the current record's "codigo_identificacion" value
 * @method Profesor            setNombres()               Sets the current record's "nombres" value
 * @method Profesor            setApellidos()             Sets the current record's "apellidos" value
 * @method Profesor            setTelefono()              Sets the current record's "telefono" value
 * @method Profesor            setEMail()                 Sets the current record's "e_mail" value
 * @method Profesor            setHabilitado()            Sets the current record's "habilitado" value
 * @method Profesor            setUrlImagen()             Sets the current record's "url_imagen" value
 * @method Profesor            setUsuario()               Sets the current record's "Usuario" value
 * @method Profesor            setIdentificacion()        Sets the current record's "Identificacion" value
 * @method Profesor            setCurso()                 Sets the current record's "Curso" collection
 * @method Profesor            setEvaluacion()            Sets the current record's "Evaluacion" collection
 * @method Profesor            setPregunta()              Sets the current record's "Pregunta" collection
 * 
 * @package    OE
 * @subpackage model
 * @author     gaea
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfesor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profesor');
        $this->hasColumn('codigo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'profesor_codigo',
             'length' => 4,
             ));
        $this->hasColumn('codigo_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('codigo_identificacion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nombres', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('apellidos', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('telefono', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('e_mail', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('habilitado', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('url_imagen', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'codigo_usuario',
             'foreign' => 'codigo'));

        $this->hasOne('Identificacion', array(
             'local' => 'codigo_identificacion',
             'foreign' => 'codigo'));

        $this->hasMany('Curso', array(
             'local' => 'codigo',
             'foreign' => 'codigo'));

        $this->hasMany('Evaluacion', array(
             'local' => 'codigo',
             'foreign' => 'codigo_profesor'));

        $this->hasMany('Pregunta', array(
             'local' => 'codigo',
             'foreign' => 'codigo_profesor'));
    }
}